name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jrd_trades_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript check
      run: npx tsc --noEmit

    - name: Run ESLint
      run: npx eslint . --ext .ts,.tsx --ignore-path .gitignore
      continue-on-error: true

    - name: Setup test database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/jrd_trades_test
      run: npm run db:push

    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/jrd_trades_test
        SESSION_SECRET: test-secret-key
        NODE_ENV: test
      run: npm test
      continue-on-error: true

    - name: Build application
      run: npm run build
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true

    - name: Check for sensitive files
      run: |
        # Check for common sensitive files/patterns
        if find . -name "*.key" -o -name "*.pem" -o -name "*.p12" | grep -q .; then
          echo "‚ùå Sensitive key files found"
          exit 1
        fi
        
        if grep -r "password\|secret\|token" --include="*.ts" --include="*.js" --exclude-dir=node_modules . | grep -v "process.env" | grep -i "=" | head -5; then
          echo "‚ö†Ô∏è Potential hardcoded secrets found (review above)"
        fi
        
        echo "‚úÖ No obvious sensitive files detected"

  deploy-staging:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Staging
      run: |
        echo "üöÄ Deploying to staging environment..."
        echo "This would typically deploy to a staging Replit or cloud service"
        
  deploy-production:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Production
      run: |
        echo "üöÄ Deploying to production environment..."
        echo "This would typically deploy to a production Replit or cloud service"
        echo "‚ö†Ô∏è IMPORTANT: Always test with demo accounts first!"